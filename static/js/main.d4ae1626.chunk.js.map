{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","target","rel","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","undefined","_useState4","searchError","setSearchError","_useState5","_useState6","searchedMovie","setSearchedMovie","handleFindMovie","fetch","concat","then","res","json","catch","Response","Error","getMovie","data","Title","Plot","Poster","imdbID","_Fragment","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","value","onChange","onClick","App","setMovies","newMovie","prev","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4ae1626.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a\n          href={movie.imdbUrl}\n          target=\"_blank\"\n          data-cy=\"movieURL\"\n          rel=\"noreferrer\"\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\n\nimport { MovieCard } from '../MovieCard';\n\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  onAddMovie: (newMovie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onAddMovie,\n}) => {\n  const [query, setQuery] = useState<string>('');\n  const [\n    searchError,\n    setSearchError,\n  ] = useState<ResponseError | undefined>(undefined);\n  const [\n    searchedMovie,\n    setSearchedMovie,\n  ] = useState<Movie | undefined>(undefined);\n\n  const handleFindMovie = () => getMovie(query)\n    .then(data => {\n      if ('Error' in data) {\n        setSearchError(data);\n      } else {\n        if (searchError) {\n          setSearchError(undefined);\n        }\n\n        setSearchedMovie({\n          title: data.Title,\n          description: data.Plot,\n          imgUrl: data.Poster,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n          imdbId: data.imdbID,\n        });\n      }\n    });\n\n  const handleSearchMovie = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleFindMovie();\n        }}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${searchError && 'is-danger'}`}\n              value={query}\n              onChange={handleSearchMovie}\n            />\n          </div>\n\n          {searchError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {searchedMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  onAddMovie(searchedMovie);\n                  setQuery('');\n                  setSearchedMovie(undefined);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {searchedMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={searchedMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=8dca72aa';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => setMovies(\n    prev => [...prev, newMovie],\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}