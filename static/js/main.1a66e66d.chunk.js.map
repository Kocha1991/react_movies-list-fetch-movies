{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","target","rel","MoviesList","movies","map","imdbId","getMovie","query","fetch","concat","then","res","json","catch","Response","Error","FindMovie","onAddMovie","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","undefined","_useState4","searchError","setSearchError","_useState5","_useState6","searchedMovie","setSearchedMovie","_useState7","_useState8","isLoading","setIsLoading","handleFindMovie","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","data","Title","Plot","Poster","imdbID","finish","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","placeholder","trim","value","onChange","disabled","onClick","clearFindMovieComponent","App","setMovies","newMovie","some","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a66e66d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a\n          href={movie.imdbUrl}\n          target=\"_blank\"\n          data-cy=\"movieURL\"\n          rel=\"noreferrer\"\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=8dca72aa';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\n\nimport { MovieCard } from '../MovieCard';\n\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  onAddMovie: (newMovie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onAddMovie,\n}) => {\n  const [query, setQuery] = useState<string>('');\n  const [\n    searchError,\n    setSearchError,\n  ] = useState<ResponseError | undefined>(undefined);\n  const [\n    searchedMovie,\n    setSearchedMovie,\n  ] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  const clearFindMovieComponent = (searchedMovie: Movie) => {\n    onAddMovie(searchedMovie);\n    setQuery('');\n    setSearchedMovie(null);\n  };\n\n  const handleFindMovie = async (\n    e: React.SyntheticEvent,\n  ) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      await getMovie(query)\n        .then(data => {\n          if ('Error' in data) {\n            setSearchError(data);\n          } else {\n            if (searchError) {\n              setSearchError(undefined);\n            }\n\n            setSearchedMovie({\n              title: data.Title,\n              description: data.Plot,\n              imgUrl: data.Poster,\n              imdbUrl: `https://www.imdb.com/title/${data.imdbID}/`,\n              imdbId: data.imdbID,\n            });\n          }\n        });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearchMovie = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={handleFindMovie}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${searchError && query.trim() && 'is-danger'}`}\n              value={query}\n              onChange={handleSearchMovie}\n            />\n          </div>\n\n          {searchError && query.trim() ? (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          ) : ''}\n        </div>\n\n        <div className=\"field is-grouped loader-centr\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button is-light ${isLoading && 'is-loading'}`}\n              disabled={!query.trim() && true}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {searchedMovie\n            && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={() => clearFindMovieComponent(searchedMovie)}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )}\n        </div>\n      </form>\n\n      {searchedMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={searchedMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    const isDublicate = movies\n      .some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!isDublicate) {\n      setMovies(prev => [...prev, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}